{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styles from \"../StylesSheets/stryles\";\nimport { Easing } from \"react-native-reanimated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CoursePage = function CoursePage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeLeft = _useState2[0],\n      setTimeLeft = _useState2[1];\n\n  var targetTime = 5000;\n  var resendTimerInterval;\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      width = _useState4[0],\n      setWidth = _useState4[1];\n\n  var animatedValue = useRef(new Animated.Value(0)).current;\n  var reactive = useRef(new Animated.Value(0)).current;\n\n  var CountTimeLeft = function CountTimeLeft(finalTime) {\n    var difference = finalTime - +new Date();\n\n    if (difference >= 0) {\n      setTimeLeft(Math.round(difference / 1000));\n    } else {\n      clearInterval(resendTimerInterval);\n      navigation.navigate(\"MainPage\");\n    }\n  };\n\n  var TiggerTime = function TiggerTime() {\n    console.log(+new Date());\n    var finalTime = +new Date() + targetTime;\n    resendTimerInterval = setInterval(function () {\n      CountTimeLeft(finalTime), 1000;\n    });\n  };\n\n  useEffect(function () {\n    Animated.timing(animatedValue, {\n      toValue: reactive,\n      duration: targetTime,\n      useNativeDriver: true,\n      easing: Easing.linear()\n    }).start();\n    TiggerTime();\n  }, []);\n  useEffect(function () {\n    reactive.setValue(-width);\n  }, [width]);\n  return _jsxs(View, {\n    style: styles.courseContainer,\n    children: [_jsx(Text, {\n      children: timeLeft\n    }), _jsx(View, {\n      onLayout: function onLayout(e) {\n        var newWidth = e.nativeEvent.layout.width;\n        console.log(newWidth);\n        setWidth(newWidth);\n      },\n      style: {\n        height: 20,\n        backgroundColor: '#00000033',\n        borderRadius: 20,\n        overflow: 'hidden'\n      },\n      children: _jsx(Animated.View, {\n        style: {\n          height: 20,\n          borderRadius: 20,\n          width: \"100%\",\n          backgroundColor: '#00000088',\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          transform: [{\n            translateX: -width + 100\n          }]\n        }\n      })\n    })]\n  });\n};\n\nexport default CoursePage;","map":{"version":3,"names":["React","useEffect","useRef","useState","styles","Easing","CoursePage","navigation","timeLeft","setTimeLeft","targetTime","resendTimerInterval","width","setWidth","animatedValue","Animated","Value","current","reactive","CountTimeLeft","finalTime","difference","Date","Math","round","clearInterval","navigate","TiggerTime","console","log","setInterval","timing","toValue","duration","useNativeDriver","easing","linear","start","setValue","courseContainer","e","newWidth","nativeEvent","layout","height","backgroundColor","borderRadius","overflow","position","left","top","transform","translateX"],"sources":["F:/WORK/2022 Y-3 T-1/ITE-434 react/Yoga/YogaProject/Pages/CoursePage.js"],"sourcesContent":["import {\n  ActivityIndicator,\n  Animated,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport styles from \"../StylesSheets/stryles\";\nimport { Easing } from \"react-native-reanimated\";\n\nconst CoursePage = ({ navigation }) => {\n\n  const [timeLeft, setTimeLeft] = useState(null);\n  let targetTime = 5000;\n  let resendTimerInterval;\n\n  const [width, setWidth] = useState(0);\n  const animatedValue = useRef(new Animated.Value(0)).current\n  const reactive = useRef(new Animated.Value(0)).current\n\n\n  const CountTimeLeft = (finalTime) => {\n    const difference = finalTime - +new Date();\n    if (difference >= 0) {\n      setTimeLeft(Math.round(difference / 1000));\n    } else {\n      clearInterval(resendTimerInterval);\n      navigation.navigate(\"MainPage\");\n    }\n  };\n\n  const TiggerTime = () => {\n    console.log(+new Date());\n    const finalTime = +new Date() + targetTime;\n    resendTimerInterval = setInterval(() => {\n      CountTimeLeft(finalTime), 1000;\n    });\n  };\n\n  useEffect(() => {\n    Animated.timing(animatedValue, {\n      toValue: reactive,\n      duration: targetTime,\n      useNativeDriver: true,\n      easing: Easing.linear()\n    }).start();\n    TiggerTime();\n  }, []);\n\n  useEffect(() => {\n    reactive.setValue(-width)\n  }, [width]);\n\n  return (\n    <View style={styles.courseContainer}>\n      <Text>{timeLeft}</Text>\n      <View\n      onLayout={(e) => {\n        const newWidth = e.nativeEvent.layout.width\n        console.log(newWidth)\n        setWidth(newWidth);\n      }}\n        style={{\n          height: 20,\n          backgroundColor: '#00000033',\n          borderRadius: 20,\n          overflow:'hidden',\n        }}\n      >\n        <Animated.View\n          style={{\n            height: 20,\n            borderRadius: 20,\n            width: \"100%\",\n            backgroundColor: '#00000088',\n            position: 'absolute',\n            left:0,\n            top:0,\n            transform: [{\n              translateX: -width +100\n            }]\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default CoursePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
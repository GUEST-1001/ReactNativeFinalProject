{"ast":null,"code":"import * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ActionSheetIOS } from \"react-native-web/dist/index\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { HiddenItem } from \"./HeaderItems\";\nimport invariant from 'invariant';\nexport var extractOverflowButtonData = function extractOverflowButtonData(hiddenButtons) {\n  var detectedElementTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [HiddenItem];\n  var btnsData = React.Children.toArray(hiddenButtons).map(function (button) {\n    var props = button.props,\n        type = button.type;\n\n    if (detectedElementTypes.includes(type)) {\n      return extract(button);\n    }\n\n    if (typeof type === 'function') {\n      var nestedElement = callSafe(type, props);\n\n      if (nestedElement && detectedElementTypes.includes(nestedElement.type)) {\n        return extract(nestedElement);\n      }\n    }\n\n    return false;\n  });\n  return btnsData.filter(Boolean);\n};\n\nvar callSafe = function callSafe(type, props) {\n  try {\n    return type(props);\n  } catch (_unused) {\n    return false;\n  }\n};\n\nvar extract = function extract(element) {\n  var _element$props = element.props,\n      title = _element$props.title,\n      onPress = _element$props.onPress,\n      disabled = _element$props.disabled,\n      destructive = _element$props.destructive;\n  return {\n    title: title,\n    onPress: onPress,\n    destructive: destructive === true,\n    disabled: disabled === true\n  };\n};\n\nvar checkParams = function checkParams(hiddenButtons) {\n  invariant(Array.isArray(hiddenButtons), 'hiddenButtons must be an array');\n};\n\nexport var overflowMenuPressHandlerActionSheet = function overflowMenuPressHandlerActionSheet(_ref) {\n  var hiddenButtons = _ref.hiddenButtons,\n      _ref$cancelButtonLabe = _ref.cancelButtonLabel,\n      cancelButtonLabel = _ref$cancelButtonLabe === void 0 ? 'Cancel' : _ref$cancelButtonLabe;\n  checkParams(hiddenButtons);\n  var actionTitles = hiddenButtons.map(function (btn) {\n    return btn.title;\n  });\n  actionTitles.unshift(cancelButtonLabel);\n\n  var disabledButtonIndices = function () {\n    var result = [];\n    hiddenButtons.forEach(function (it, index) {\n      if (it.disabled === true) {\n        result.push(index + 1);\n      }\n    });\n    return result;\n  }();\n\n  var destructiveButtonIndex = function () {\n    var result = [];\n    hiddenButtons.forEach(function (it, index) {\n      if (it.destructive === true) {\n        result.push(index + 1);\n      }\n    });\n    return result;\n  }();\n\n  ActionSheetIOS.showActionSheetWithOptions({\n    options: actionTitles,\n    cancelButtonIndex: 0,\n    disabledButtonIndices: disabledButtonIndices,\n    destructiveButtonIndex: destructiveButtonIndex\n  }, function (buttonIndex) {\n    if (buttonIndex > 0) {\n      hiddenButtons[buttonIndex - 1].onPress();\n    }\n  });\n};\nexport var overflowMenuPressHandlerPopupMenu = function overflowMenuPressHandlerPopupMenu(_ref2) {\n  var hiddenButtons = _ref2.hiddenButtons,\n      overflowButtonRef = _ref2.overflowButtonRef;\n  checkParams(hiddenButtons);\n  var enabledButtons = hiddenButtons.filter(function (it) {\n    return it.disabled !== true;\n  });\n  UIManager.showPopupMenu(findNodeHandle(overflowButtonRef), enabledButtons.map(function (btn) {\n    return btn.title;\n  }), function (err) {\n    return console.debug('overflowBtn error', err);\n  }, function (eventName, index) {\n    if (eventName !== 'itemSelected' || typeof index !== 'number') {\n      return;\n    }\n\n    enabledButtons[index].onPress();\n  });\n};\nexport var overflowMenuPressHandlerDropdownMenu = function overflowMenuPressHandlerDropdownMenu(_ref3) {\n  var children = _ref3.children,\n      overflowButtonRef = _ref3.overflowButtonRef,\n      _private_toggleMenu = _ref3._private_toggleMenu;\n\n  if (overflowButtonRef) {\n    overflowButtonRef.measureInWindow(function (x, y, width) {\n      _private_toggleMenu({\n        elements: children,\n        x: x + width,\n        y: y\n      });\n    });\n  } else {}\n};\nexport var defaultOnOverflowMenuPress = Platform.select({\n  ios: overflowMenuPressHandlerActionSheet,\n  default: overflowMenuPressHandlerDropdownMenu\n});","map":{"version":3,"names":["React","ActionSheetIOS","HiddenItem","invariant","extractOverflowButtonData","hiddenButtons","detectedElementTypes","btnsData","Children","toArray","map","button","props","type","includes","extract","nestedElement","callSafe","filter","Boolean","element","title","onPress","disabled","destructive","checkParams","Array","isArray","overflowMenuPressHandlerActionSheet","cancelButtonLabel","actionTitles","btn","unshift","disabledButtonIndices","result","forEach","it","index","push","destructiveButtonIndex","showActionSheetWithOptions","options","cancelButtonIndex","buttonIndex","overflowMenuPressHandlerPopupMenu","overflowButtonRef","enabledButtons","UIManager","showPopupMenu","findNodeHandle","err","console","debug","eventName","overflowMenuPressHandlerDropdownMenu","children","_private_toggleMenu","measureInWindow","x","y","width","elements","defaultOnOverflowMenuPress","Platform","select","ios","default"],"sources":["D:/download cut/ReactNativeFinalProject-master/ReactNativeFinalProject-master/node_modules/react-navigation-header-buttons/src/overflowMenuPressHandlers.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { Platform, ActionSheetIOS, UIManager, findNodeHandle, typeof View } from 'react-native';\nimport { HiddenItem } from './HeaderItems';\nimport invariant from 'invariant';\nimport type { ToggleMenuParam } from './overflowMenu/OverflowMenuContext';\n\ntype OverflowButtonDescriptors = $ReadOnlyArray<{\n  title: string,\n  onPress: () => void | Promise<void>,\n  destructive?: boolean,\n  disabled?: boolean,\n}>;\n\nexport const extractOverflowButtonData = (\n  hiddenButtons: React.Node,\n  detectedElementTypes: Array<React.StatelessFunctionalComponent<any>> = [HiddenItem]\n): OverflowButtonDescriptors => {\n  // don't do this at home - this is not how React is meant to be used!\n  const btnsData = React.Children.toArray(hiddenButtons).map((button) => {\n    const { props, type } = button;\n    if (detectedElementTypes.includes(type)) {\n      return extract(button);\n    }\n\n    if (typeof type === 'function') {\n      const nestedElement = callSafe(type, props);\n      if (nestedElement && detectedElementTypes.includes(nestedElement.type)) {\n        return extract(nestedElement);\n      }\n    }\n    return false;\n  });\n  // $FlowFixMe\n  return btnsData.filter(Boolean);\n};\n\nconst callSafe = (type, props) => {\n  try {\n    return type(props);\n  } catch {\n    return false;\n  }\n};\n\nconst extract = (element: React.Element<any>) => {\n  const {\n    props: { title, onPress, disabled, destructive },\n  } = element;\n  return { title, onPress, destructive: destructive === true, disabled: disabled === true };\n};\n\nexport type OnOverflowMenuPressParams = {\n  hiddenButtons: OverflowButtonDescriptors,\n  _private_toggleMenu: (ToggleMenuParam) => void,\n  overflowButtonRef: null | View,\n  cancelButtonLabel?: string,\n  children: React.Node,\n};\n\nconst checkParams = (hiddenButtons) => {\n  invariant(Array.isArray(hiddenButtons), 'hiddenButtons must be an array');\n};\n\nexport const overflowMenuPressHandlerActionSheet = ({\n  hiddenButtons,\n  cancelButtonLabel = 'Cancel',\n}: OnOverflowMenuPressParams) => {\n  checkParams(hiddenButtons);\n  let actionTitles = hiddenButtons.map((btn) => btn.title);\n  actionTitles.unshift(cancelButtonLabel);\n\n  const disabledButtonIndices: Array<number> = (() => {\n    let result = [];\n    hiddenButtons.forEach((it, index) => {\n      if (it.disabled === true) {\n        result.push(index + 1);\n      }\n    });\n    return result;\n  })();\n\n  const destructiveButtonIndex: Array<number> = (() => {\n    let result = [];\n    hiddenButtons.forEach((it, index) => {\n      if (it.destructive === true) {\n        result.push(index + 1);\n      }\n    });\n    return result;\n  })();\n\n  ActionSheetIOS.showActionSheetWithOptions(\n    // $FlowFixMe - typings are old\n    {\n      options: actionTitles,\n      cancelButtonIndex: 0,\n      disabledButtonIndices,\n      destructiveButtonIndex,\n    },\n    (buttonIndex: number) => {\n      if (buttonIndex > 0) {\n        hiddenButtons[buttonIndex - 1].onPress();\n      }\n    }\n  );\n};\n\nexport const overflowMenuPressHandlerPopupMenu = ({\n  hiddenButtons,\n  overflowButtonRef,\n}: OnOverflowMenuPressParams) => {\n  checkParams(hiddenButtons);\n  const enabledButtons = hiddenButtons.filter((it) => it.disabled !== true);\n\n  UIManager.showPopupMenu(\n    findNodeHandle(overflowButtonRef),\n    enabledButtons.map((btn) => btn.title),\n    (err) => console.debug('overflowBtn error', err),\n    (eventName: string, index?: number) => {\n      if (eventName !== 'itemSelected' || typeof index !== 'number') {\n        return;\n      }\n      enabledButtons[index].onPress();\n    }\n  );\n};\n\nexport const overflowMenuPressHandlerDropdownMenu = ({\n  children,\n  overflowButtonRef,\n  _private_toggleMenu,\n}: OnOverflowMenuPressParams) => {\n  if (overflowButtonRef) {\n    // $FlowFixMe\n    overflowButtonRef.measureInWindow((x, y, width) => {\n      _private_toggleMenu({ elements: children, x: x + width, y });\n    });\n  } else {\n    // TODO ignore or show?\n  }\n};\n\nexport const defaultOnOverflowMenuPress: (OnOverflowMenuPressParams) => void = Platform.select({\n  ios: overflowMenuPressHandlerActionSheet,\n  default: overflowMenuPressHandlerDropdownMenu,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
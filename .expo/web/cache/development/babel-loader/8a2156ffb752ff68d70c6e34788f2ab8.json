{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../StylesSheets/stryles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CoursePage = function CoursePage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeLeft = _useState2[0],\n      setTimeLeft = _useState2[1];\n\n  var targetTime = 5000;\n  var resendTimerInterval;\n\n  var CountTimeLeft = function CountTimeLeft(finalTime) {\n    var difference = finalTime - +new Date();\n\n    if (difference >= 0) {\n      setTimeLeft(Math.round(difference / 1000));\n    } else {\n      clearInterval(resendTimerInterval);\n      navigation.navigate(\"MainPage\");\n    }\n  };\n\n  var TiggerTime = function TiggerTime() {\n    console.log(+new Date());\n    var finalTime = +new Date() + targetTime;\n    resendTimerInterval = setInterval(function () {\n      CountTimeLeft(finalTime), 1000;\n    });\n  };\n\n  useEffect(function () {\n    TiggerTime();\n  }, []);\n  return _jsx(View, {\n    style: styles.courseContainer,\n    children: _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: timeLeft\n      }), _jsx(View, {\n        style: {\n          height: 20,\n          backgroundColor: \"rgba(0,0,0,0.1)\",\n          borderRadius: 20,\n          overflow: 'hidden',\n          width: 100\n        },\n        children: _jsx(View, {\n          style: {\n            height: 20,\n            borderRadius: 20,\n            width: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.5)\"\n          }\n        })\n      })]\n    })\n  });\n};\n\nexport default CoursePage;","map":{"version":3,"names":["React","useEffect","useState","styles","CoursePage","navigation","timeLeft","setTimeLeft","targetTime","resendTimerInterval","CountTimeLeft","finalTime","difference","Date","Math","round","clearInterval","navigate","TiggerTime","console","log","setInterval","courseContainer","height","backgroundColor","borderRadius","overflow","width"],"sources":["F:/WORK/2022 Y-3 T-1/ITE-434 react/Yoga/YogaProject/Pages/CoursePage.js"],"sourcesContent":["import {\n  ActivityIndicator,\n  Animated,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\n\nimport styles from \"../StylesSheets/stryles\";\n\nconst CoursePage = ({ navigation }) => {\n  const [timeLeft, setTimeLeft] = useState(null);\n  let targetTime = 5000;\n  let resendTimerInterval;\n\n  const CountTimeLeft = (finalTime) => {\n    const difference = finalTime - +new Date();\n    if (difference >= 0) {\n      setTimeLeft(Math.round(difference / 1000));\n    } else {\n      clearInterval(resendTimerInterval);\n      navigation.navigate(\"MainPage\");\n    }\n  };\n\n  const TiggerTime = () => {\n    console.log(+new Date());\n    const finalTime = +new Date() + targetTime;\n    resendTimerInterval = setInterval(() => {\n      CountTimeLeft(finalTime), 1000;\n    });\n  };\n\n  useEffect(() => {\n    TiggerTime();\n  }, []);\n\n  return (\n    <View style={styles.courseContainer}>\n      <>\n      <Text>{timeLeft}</Text>\n      <View\n        style={{\n          height: 20,\n          backgroundColor: \"rgba(0,0,0,0.1)\",\n          borderRadius: 20,\n          overflow:'hidden',\n          width: 100,\n        }}\n      >\n        <View\n          style={{\n            height: 20,\n            borderRadius: 20,\n            width: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.5)\",\n          }}\n        />\n      </View>\n      </>\n    </View>\n  );\n};\n\nexport default CoursePage;\n"],"mappings":";;;;;;AAOA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP;;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EACrC,gBAAgCH,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOI,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAIC,UAAU,GAAG,IAAjB;EACA,IAAIC,mBAAJ;;EAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAe;IACnC,IAAMC,UAAU,GAAGD,SAAS,GAAG,CAAC,IAAIE,IAAJ,EAAhC;;IACA,IAAID,UAAU,IAAI,CAAlB,EAAqB;MACnBL,WAAW,CAACO,IAAI,CAACC,KAAL,CAAWH,UAAU,GAAG,IAAxB,CAAD,CAAX;IACD,CAFD,MAEO;MACLI,aAAa,CAACP,mBAAD,CAAb;MACAJ,UAAU,CAACY,QAAX,CAAoB,UAApB;IACD;EACF,CARD;;EAUA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBC,OAAO,CAACC,GAAR,CAAY,CAAC,IAAIP,IAAJ,EAAb;IACA,IAAMF,SAAS,GAAG,CAAC,IAAIE,IAAJ,EAAD,GAAcL,UAAhC;IACAC,mBAAmB,GAAGY,WAAW,CAAC,YAAM;MACtCX,aAAa,CAACC,SAAD,CAAb,EAA0B,IAA1B;IACD,CAFgC,CAAjC;EAGD,CAND;;EAQAV,SAAS,CAAC,YAAM;IACdiB,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT;EAIA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEf,MAAM,CAACmB,eAApB;IAAA,UACE;MAAA,WACA,KAAC,IAAD;QAAA,UAAOhB;MAAP,EADA,EAEA,KAAC,IAAD;QACE,KAAK,EAAE;UACLiB,MAAM,EAAE,EADH;UAELC,eAAe,EAAE,iBAFZ;UAGLC,YAAY,EAAE,EAHT;UAILC,QAAQ,EAAC,QAJJ;UAKLC,KAAK,EAAE;QALF,CADT;QAAA,UASE,KAAC,IAAD;UACE,KAAK,EAAE;YACLJ,MAAM,EAAE,EADH;YAELE,YAAY,EAAE,EAFT;YAGLE,KAAK,EAAE,MAHF;YAILH,eAAe,EAAE;UAJZ;QADT;MATF,EAFA;IAAA;EADF,EADF;AAyBD,CApDD;;AAsDA,eAAepB,UAAf"},"metadata":{},"sourceType":"module"}